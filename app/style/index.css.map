{"version":3,"sources":["index.styl","../../../../node_modules/nib/lib/nib/vendor.styl","../../../../node_modules/nib/lib/nib/flex.styl","../../../../node_modules/rupture/rupture/index.styl","../../../../node_modules/stylus/lib/functions/index.styl","../../../../node_modules/nib/lib/nib/border.styl","../../../../node_modules/axis/axis/vendor.styl","../../../../node_modules/nib/lib/nib/overflow.styl"],"names":[],"mappings":"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","file":"index.css","sourcesContent":["$bdcolor = #c9c9c9\n$fontcolor = #161414\n$bgcolor = #f8f8f9\n$hahakicolor = #ab8a60\n$errcolor = #D35269\n$alpha-hahakicolor = alpha($hahakicolor, .4)\n$dark-hahakicolor = darken($hahakicolor, 13)\n// $shadow = 0 0 1em #FFF,0 0 1em #FFF,0 0 1em #FFF,0 0 1em #FFF,0 0 1em #FF,0 0 1em #FFF,0 0 1em #FFFF\n// $light-shadow = 0 0 1.3em 1em alpha(#fff,.55),0 0 1.3em 1em alpha(#fff,.55),0 0 1.3em 1em alpha(#fff,.55),0 0 1.3em 1em alpha(#fff,.55)\n\n:root\n  font: 62.5%/1.7 Verdana, \"游ゴシック\", YuGothic, \"ヒラギノ角ゴ ProN W3\", \"Hiragino Kaku Gothic ProN\", \"メイリオ\", Meiryo, sans-serif\n\n::selection\n  background: $alpha-hahakicolor\n\n.ng-hide,\n.ng-cloak\n  display: none\n\nbody\n  margin: 0\n\n.hahaki\n  background #f8f8f9\n  height: 100vh\n  box-sizing: border-box\n  padding: 4rem\n  color: $font-color\n\n.hahaki-wrapper\n  font-size: 2.1em\n\n.wrapper\n  font-size: 1.5rem\n  width: 25rem\n  margin-left: calc(27rem + 6.8vw)\n  @media screen and (min-width: 920px)\n    width: 48rem\n  @media screen and (min-width: 1190px)\n    margin-left: 35rem\n    width: 72rem\n  @media screen and (min-width: 1430px)\n    width: 96rem\n\n.card-list\n  display flex\n  flex-wrap: wrap\n  padding-left: 0\n  margin: 0\n  list-style: none\n\n.card-item\n  &\n    position: relative\n    flex: 0 0 23rem\n    border: .1rem solid $bdcolor\n    margin-bottom: 1em\n    background: #fff\n    box-shadow: 0 .2rem .3rem -.2rem $bdcolor\n    overflow: hidden\n  &.card-disabled\n    border-color: $bgcolor\n    box-shadow: none\n  @media screen and (min-width: 920px)\n    margin-right: 1rem\n  @media screen and (min-width: 920px) and (max-width: 1189px)\n    &:nth-child(even)\n      margin-right: 0\n  @media screen and (min-width: 1190px) and (max-width: 1429px)\n    &:nth-child(3n)\n      margin-right: 0\n  @media screen and (min-width: 1430px)\n    &:nth-child(4n)\n      margin-right: 0\n  &:not(.card-disabled):hover\n    .card-ctrl\n      opacity: 1\n    .card-ctrl-btn\n      &\n        top: 0\n        opacity: 1\n      &:first-child\n        transition: .21s cubic-bezier(1, 0.05, 0.38, 0.54) .21s\n      &:last-child\n        transition: .21s cubic-bezier(1, 0.05, 0.38, 0.54) .34s\n\n.card-img\n  width: 100%\n  height: 23rem\n  background-size: cover\n\n.card-ctrl\n  position: absolute\n  left: 0\n  top: 0\n  width: 23rem\n  height: 23rem\n  box-sizing: border-box\n  padding: 8rem 10.25rem\n  background: rgba(0,0,0,.4)\n  font-size: 1.5em\n  opacity: 0\n  transition: .21s ease-in\n\n.card-ctrl-btn\n  &\n    transform: translateZ(0)\n    position: relative\n    top: 1.6em\n    font-size: 1.3em\n    color: #fff\n    opacity: 0\n    transition: 0s linear .56s\n    cursor: pointer\n\n.card-form-group\n  margin: 1.44em\n\n.card-form-label\n  &\n    font-size: .8em\n  &:after\n    content: \":\"\n\n.card-form-input\n  width: calc(100% - 4rem)\n  box-sizing: border-box\n  padding: .55em 1em\n  border: none\n  border-bottom: .1rem solid $bdcolor\n  outline: none\n\n.card-form-input.ng-invalid\n  border-bottom-color: $errcolor\n  background: lighten($errcolor, 20)\n\n.card-form-note\n  float: right\n  margin-top: 1.3rem\n  font-size: .8em\n  color: $bdcolor\n\n.sidebar\n  position: fixed\n  left: 0\n  top: 0\n  width: 30rem\n  height: 100vh\n  box-sizing: border-box\n  padding: 4em 0\n  background: $hahakicolor\n  text-align: center\n\n.logo\n  &\n    width: 5em\n    height: 5em\n    margin-bottom: 3em\n  path\n    stroke: $fontcolor\n\n.btn-dl\n  &\n    width: 71%\n    padding: 1.6em 1em\n    border: .1rem solid $bgcolor\n    background: transparent\n    color: $bgcolor\n    letter-spacing: .1rem\n    cursor: pointer\n    outline: none\n    transition: background .13s ease-in, color .08s ease-in .13s\n  &.btn-disabled\n    opacity: .34\n    cursor: default\n  &:not(.btn-disabled):hover\n    color: $hahakicolor\n    background: $bgcolor\n    transition: background .13s ease-in .08s, color .08s ease-in\n\n.card-undo\n  &\n    z-index: 1\n    position: absolute\n    top: 0\n    left: 0\n    box-sizing: border-box\n    padding: 13.5rem 10rem\n    background: rgba(255,255,255,.75)\n    color: lighten(#000, 40)\n    text-align: center\n    line-height: 1.2\n    cursor: pointer\n    transition: .21s ease-in\n  &:hover\n    color: $fontcolor\n.i-triangle-left\n  font-size: 2.1em\n\n.full-view-wrapper\n  position: fixed\n  left: 0\n  top: 0\n  width: 100vw\n  height: 100vh\n  background: rgba(0,0,0,.4)\n\n.full-view-group\n  position: absolute\n  right: 50%\n  bottom: 50%\n  transform: translate(50%, 50%)\n\n.full-view-img\n  max-width: 89vw\n  max-height: 89vh\n\n.full-view-close\n  position: absolute\n  right: -1.6em\n  font-size: 1.3em\n  color: #fff\n  cursor: pointer\n\n.opt-list\n  padding-left: 0\n  margin-bottom: 3.4rem\n\n.opt-item\n  position: relative\n\n.i-file-directory\n  &\n    position: absolute\n    top: .89rem\n    left: .89rem\n    font-size: 1.5em\n  &:after\n    content: \"\"\n    display inline-block\n    border-width: .55rem 0 .55rem .55rem\n    border-style: solid\n    border-color: transparent transparent transparent $fontcolor\n    position: relative\n    left: .55rem\n    bottom: .55rem\n\n.opt-foldername\n  width: 100%\n  box-sizing: border-box\n  padding: 1.6em 1em\n  border: none\n  border-bottom: .1rem solid $bgcolor\n  background: $bgcolor\n  outline: none\n  text-indent: 5rem\n\n.ask\n  width: 71%\n  margin: 1rem auto\n  font-size: .89em\n  line-height: 1.2\n  text-align: right\n  cursor: pointer\n  label\n    cursor: pointer\n\n.btn-ask\n  margin: 0 1rem 0 -1rem\n","use('../nodes/vendor-helpers.js')\n@import 'config'\n\n/*\n * Alias \"nowrap\" as \"no-wrap\".\n */\n\nno-wrap = unquote('nowrap')\n\n/*\n * Helper to find out if a given value is a width\n */\n\nis-width(val)\n  if auto == val\n    return true\n  else if val && 'unit' == type(val)\n    // Stylus does not short circuit so we need to perform this as a distinct\n    // operation to prevent errors\n    return '' != unit(val)\n  return false\n\n/*\n * Vendor support for the given prop / arguments, optionally specifying the\n * only prefixes to utilize, or those which should be ignored.\n */\n\nvendor(prop, args, only = null, ignore = null, vendor-property = true)\n  need_normalize = !vendor-property or prop in ('transition' 'transition-property' 'border-image' 'border-image-slice')\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore)\n      if official == prefix\n        if need_normalize\n          {prop}: normalize(prop,('%s' % args))\n        else\n          {prop}: args\n      else\n        newprop = prop\n        newprop = '-' + prefix + '-' + prop if vendor-property\n\n        if need_normalize\n          {newprop}: normalize(prop,('%s' % args),prefix)\n        else\n          {newprop}: args\n/*\n * Vendorize the given value.\n */\n\nvendor-value(arg, only = null, ignore = null)\n  prop = current-property[0]\n  for prefix in vendor-prefixes\n    unless (only and !(prefix in only)) or (ignore and prefix in ignore) or official == prefix\n      add-property(prop, '-%s-%s' % (prefix arg))\n  arg\n\n/*\n * Vendor \"box-shadow\" support.\n */\n\nbox-shadow()\n  vendor('box-shadow', arguments, only: webkit official)\n\n/*\n * Vendor \"user-select\" support.\n */\n\nuser-select()\n  vendor('user-select', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"column-count\" support.\n */\n\ncolumn-count()\n  vendor('column-count', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-gap\" support.\n */\n\ncolumn-gap()\n  vendor('column-gap', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule\" support.\n */\n\ncolumn-rule()\n  vendor('column-rule', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-color\" support.\n */\n\ncolumn-rule-color()\n  vendor('column-rule-color', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-width\" support.\n */\n\ncolumn-rule-width()\n  vendor('column-rule-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-rule-style\" support.\n */\n\ncolumn-rule-style()\n  vendor('column-rule-style', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-width\" support.\n */\n\ncolumn-width()\n  vendor('column-width', arguments, only: webkit moz official)\n\n/*\n * Vendor \"column-span\" support.\n */\n\ncolumn-span()\n  vendor('column-span', arguments, only: webkit official)\n\n/*\n * Vendor \"column-fill\" support.\n */\n\ncolumn-fill()\n  vendor('column-fill', arguments, only: moz)\n\n/*\n * Legacy syntax support for background-clip and background-origin\n */\n\nlegacy-bg-values(property, args)\n  legacy_args = ()\n  importance = unquote('')\n  for subargs in args\n    for arg in subargs\n      if arg in (border-box padding-box content-box)\n        arg = unquote('border')  if arg == border-box\n        arg = unquote('padding') if arg == padding-box\n        arg = unquote('content') if arg == content-box\n      if arg != '!important'\n        push(legacy_args,arg)\n      else\n        importance = !important\n  vendor(property, unquote(join(', ',legacy_args)) importance, only: moz webkit)\n\n/*\n * Vendor \"background-clip\" support.\n */\n\nbackground-clip()\n  if arguments[0] == text\n    vendor('background-clip', arguments, only: webkit)\n  else\n    legacy-bg-values('background-clip', arguments)\n    background-clip: arguments\n\n/*\n * Vendor \"background-origin\" support.\n */\n\nbackground-origin()\n  legacy-bg-values('background-origin', arguments)\n  background-origin: arguments\n\n/*\n * Vendor \"background-size\" support.\n */\n\nbackground-size()\n  vendor('background-size', arguments, only: webkit moz official)\n\n/*\n * Vendor \"transform\" support.\n */\n\ntransform()\n  vendor('transform', arguments)\n\n/*\n * Vendor \"transform-origin\" support.\n */\ntransform-origin()\n    vendor('transform-origin', arguments)\n\n/*\n * Vendor \"transform-style\" support.\n */\n\ntransform-style()\n  vendor('transform-style', arguments)\n\n/*\n * Vendor \"border-image\" support.\n */\n\nborder-image()\n  vendor('border-image', arguments, only: webkit moz o official)\n\n/*\n * Vendor \"transition\" support.\n */\n\ntransition()\n  vendor('transition', arguments)\n\n/*\n * Vendor \"transition-property\" support.\n */\n\ntransition-property()\n  vendor('transition-property', arguments)\n\n/*\n * Vendor \"transition-duration\" support.\n */\n\ntransition-duration()\n  vendor('transition-duration', arguments)\n\n/*\n * Vendor \"transition-timing-function\" support.\n */\n\ntransition-timing-function()\n  vendor('transition-timing-function', arguments)\n\n/*\n * Vendor \"transition-delay\" support.\n */\n\ntransition-delay()\n  vendor('transition-delay', arguments)\n\n/*\n * Vendor \"backface-visibility\" support.\n */\n\nbackface-visibility()\n  vendor('backface-visibility', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"perspective\" support.\n */\n\nperspective()\n  if mixin\n    vendor('perspective', arguments, only: webkit moz ms official)\n  else\n    'perspective(%s)' % arguments\n\n/*\n * Vendor \"perspective-origin\" support.\n */\n\nperspective-origin()\n  vendor('perspective-origin', arguments, only: webkit moz ms official)\n\n/*\n * Opacity with conditional IE support.\n */\n\nopacity(n, args...)\n  opacity: n args\n  if support-for-ie\n    if n == inherit or n == initial\n      -ms-filter: n args\n      filter: n args\n    else\n      val = round(n * 100)\n      if val == 100\n        -ms-filter: none args\n        filter: none args\n      else\n        -ms-filter: '\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\"' % val args\n        filter: 'alpha(opacity=%s)' % val args\n\n/*\n * Vendor \"text-size-adjust\"\n */\n\ntext-size-adjust()\n  vendor('text-size-adjust', arguments)\n\n/*\n * Alias the \"white-space\" property.\n */\n\nwhitespace()\n  white-space: arguments\n\n/*\n * Vendor \"box-sizing\" support.\n */\n\nbox-sizing()\n  vendor('box-sizing', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-orient\" support.\n */\n\nbox-orient()\n  vendor('box-orient', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-flex-group\" support.\n */\n\nbox-flex-group()\n  vendor('box-flex-group', arguments, only: webkit moz official)\n\n/*\n * Vendor \"box-ordinal-group\" support.\n */\n\nbox-ordinal-group()\n  vendor('box-ordinal-group', arguments, only: webkit moz ms official)\n\n\n/*\n * Vendor \"box-align\" support.\n */\n\nbox-align()\n  vendor('box-align', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-pack\" support.\n */\n\nbox-pack()\n  vendor('box-pack', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"box-direction\" support.\n */\n\nbox-direction()\n  vendor('box-direction', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"animation\" support.\n */\n\nanimation()\n  vendor('animation', arguments)\n\n\n/*\n * Vendor \"animation-name\" support.\n */\n\nanimation-name()\n  vendor('animation-name', arguments)\n\n/*\n * Vendor \"animation-duration\" support.\n */\n\nanimation-duration()\n  vendor('animation-duration', arguments)\n\n/*\n * Vendor \"animation-delay\" support.\n */\n\nanimation-delay()\n  vendor('animation-delay', arguments)\n\n/*\n * Vendor \"animation-direction\" support.\n */\n\nanimation-direction()\n  vendor('animation-direction', arguments)\n\n/*\n * Vendor \"animation-iteration-count\" support.\n */\n\nanimation-iteration-count()\n  vendor('animation-iteration-count', arguments)\n\n/*\n * Vendor \"animation-timing-function\" support.\n */\n\nanimation-timing-function()\n  vendor('animation-timing-function', arguments)\n\n/*\n * Vendor \"animation-play-state\" support.\n */\n\nanimation-play-state()\n  vendor('animation-play-state', arguments)\n\n/*\n * Vendor \"animation-fill-mode\" support.\n */\n\nanimation-fill-mode()\n  vendor('animation-fill-mode', arguments)\n\n/*\n * Vendor \"hyphens\" support.\n */\n\nhyphens()\n  vendor('hyphens', arguments, only: webkit moz ms official)\n\n/*\n * Vendor \"appearance\" support.\n */\n\nappearance()\n  vendor('appearance', arguments, only: webkit moz official)\n\n/*\n * Vendor \"tab-size\" support.\n */\n\ntab-size()\n  vendor('tab-size', arguments, only: moz o official)\n\n/*\n * Vendor \"overflow-scrolling\" support.\n */\n\noverflow-scrolling()\n  vendor('overflow-scrolling', arguments, only: webkit official)\n\n/*\n * Vendor \"text-overflow\" support, , -o- for opera 9.* - 10.*\n */\n\ntext-overflow()\n  vendor('text-overflow', arguments, only: official o)\n\n/*\n * Vendor \"text-size-adjust\" support.\n */\ntext-size-adjust()\n  vendor('text-size-adjust', arguments, only: official webkit ms)\n\n/*\n * Vendor \"font-smoothing\" support, webkit only.\n */\nfont-smoothing()\n  vendor('font-smoothing', arguments, only: webkit)\n\n/*\n * Helper for border-radius().\n */\n\n-apply-border-radius(pos, importance)\n  if length(pos) == 3\n    // border-radius: <top | buttom> <left | right> <n>\n    y = pos[0]\n    x = pos[1]\n    // We don't use moz for simple boder-radius anymore\n    // vendor('border-radius-%s%s' % pos, pos[2], only: moz)\n    vendor('border-%s-%s-radius' % pos, pos[2] importance, only: webkit official)\n  else if pos[0] in (top bottom)\n    // border-radius: <top | bottom> <n>\n    -apply-border-radius(pos[0] left pos[1], importance)\n    -apply-border-radius(pos[0] right pos[1], importance)\n  else if pos[0] in (left right)\n    // border-radius: <left | right> <n>\n    unshift(pos, top);\n    -apply-border-radius(pos, importance)\n    pos[0] = bottom\n    -apply-border-radius(pos, importance)\n\n/*\n * border-radius supporting vendor prefixes and\n * augmented behavior.\n *\n * Examples:\n *\n *    border-radius: 2px 5px\n *    border-radius: top 5px bottom 10px\n *    border-radius: left 5px\n *    border-radius: top left 5px\n *    border-radius: top left 10px bottom right 5px\n *    border-radius: top left 10px, bottom right 5px\n *\n */\n\nborder-radius()\n  pos = ()\n  augmented = false\n  importance = arguments[length(arguments) - 1] == !important ? !important : unquote('')\n\n  for args in arguments\n    for arg in args\n      if arg is a 'ident'\n        append(pos, arg)\n        augmented = true\n      else\n        append(pos, arg)\n        if augmented\n          -apply-border-radius(pos, importance)\n          pos = ()\n  vendor('border-radius', pos, only: webkit official) unless augmented\n\n/**\n * Vendor input-placeholder/placeholder support.\n *\n * Examples:\n *    // Default syntax\n *    body\n *      placeholder(color #333, font-weight normal)\n *\n *    // The comma is important\n *    .placeholder-red\n *      placeholder(color red,)\n *\n *    // We can pass a function\n *    green-placeholder()\n *      color green\n *    .placeholder-green\n *      placeholder(green-placeholder)\n *\n *    // We can pass a hash\n *    textarea\n *      placeholder((font-style italic) (font-weight bold) (padding '4px 10px'))\n */\nplaceholder()\n  for v in ':-webkit-input' '-moz' ':-moz' '-ms-input'\n    &:{v}-placeholder\n      for pair in arguments\n        if typeof(pair) == 'function'\n          pair()\n        else if pair is not null && pair[0] is not null\n          {pair[0]}: type(pair[1]) == 'string' ? s(pair[1]) : pair[1]\ninput-placeholder = placeholder\n\n/*\n * Vendor background support (gradients).\n */\n\nbackground()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background', arguments, vendor-property: false)\n  else\n    background arguments\n\nbackground-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('background-image', arguments, vendor-property: false)\n  else\n    background-image arguments\n\ncursor()\n  if match('-gradient\\(', ''+arguments)\n    vendor('cursor', arguments, vendor-property: false)\n  else\n    cursor arguments\n\nlist-style()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style', arguments, vendor-property: false)\n  else\n    list-style arguments\n\nlist-style-image()\n  if match('-gradient\\(', ''+arguments)\n    vendor('list-style-image', arguments, vendor-property: false)\n  else\n    list-style-image arguments\n","/*\n * Vendor \"display: flex\" support with fallback to obsolete versions.\n */\n\nflex-version ?= box flex\n\n//\n// 1. Display values\n//    - http://www.w3.org/TR/css3-flexbox/#flex-containers\n//\ndisplay(type, args...)\n  if flex == type || inline-flex == type\n    if box in flex-version\n      if flex == type\n        display: -ms-flexbox args\n        display: vendor-value(box args, only: moz webkit)\n      else\n        display: -ms-inline-flexbox args\n        display: vendor-value(inline-box args, only: moz webkit)\n    if flex in flex-version\n      display: vendor-value(arguments, only: webkit official) // overwrites old webkit\n  else\n    display: arguments\n\n/*\n * New syntax for browsers like Google Chrome.\n * Plus a translation to the old syntax, if possible.\n */\n\n\n//\n// 5. Ordering and Orientation\n//    - http://www.w3.org/TR/css3-flexbox/#ordering-and-orientation\n//\n-flex-obsolete-direction(direction)\n  if box in flex-version\n    if row-reverse == direction || column-reverse == direction\n      vendor('box-direction', reverse, ignore: ms official)\n\n    if row == direction || row-reverse == direction\n      vendor('box-orient', horizontal, ignore: ms official)\n    else if column == direction || column-reverse == direction\n      vendor('box-orient', vertical, ignore: ms official)\n\n-flex-obsolete-wrap(value)\n  if box in flex-version\n    // WARN: wrap-reverse does not have a box equivalent. This will render in different manners\n    //    on box vs. flex values.\n    if 'wrap' == value || wrap-reverse == value\n      vendor('box-lines', multiple, ignore: ms official)\n    else if nowrap == value\n      vendor('box-lines', single, ignore: ms official)\n\nflex-direction(direction)\n  // obsolete\n  -flex-obsolete-direction(direction)\n\n  // new\n  if flex in flex-version\n    vendor('flex-direction', arguments, only: webkit ms official)\n\nflex-wrap(value)\n  // obsolete\n  -flex-obsolete-wrap(value)\n\n  if flex in flex-version\n    vendor('flex-wrap', arguments, only: webkit ms official)\n\nflex-flow()\n  // obsolete\n  -flex-obsolete-direction(arguments[0])\n  -flex-obsolete-direction(arguments[1])\n  -flex-obsolete-wrap(arguments[0])\n  -flex-obsolete-wrap(arguments[1])\n\n  // new\n  if flex in flex-version\n    vendor('flex-flow', arguments, only: webkit ms official)\n\n\norder()\n  // obsolete\n  if box in flex-version\n    vendor('box-ordinal-group', arguments, ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-order', arguments, only: ms)\n    vendor('order', arguments, only: webkit official)\n\n\n//\n// 7. Flexibility\n//    - http://www.w3.org/TR/css3-flexbox/#flexibility\n//\nflex-grow(growth)\n  // obsolete\n  if box in flex-version\n    vendor('box-flex', growth)\n\n  // new\n  if flex in flex-version\n    vendor('flex-grow', arguments, only: webkit official)\n\nflex-basis()\n  if flex in flex-version\n    vendor('flex-basis', arguments, only: webkit official)\n\nflex-shrink()\n  if flex in flex-version\n    vendor('flex-shrink', arguments, only: webkit official)\n\nflex(growth)\n\n  // obsolete\n  if box in flex-version\n    shrink = 1\n\n    if none == growth || initial == growth\n      // Well known values\n      shrink = 0 if none == growth\n      growth = 0\n    else if is-width(growth) == true\n      // Basis is defined as the first parameter\n      growth = arguments[1] || 0\n      shrink = arguments[2] if 3 <= length(arguments)\n    else if arguments[1] && is-width(arguments[1]) == false\n      // Growth is first and shrink is second\n      shrink = arguments[1]\n\n    // Since we can't make the distinction between growing and shrinking in the box model, take\n    // the one that provides the most flexibility.\n    vendor('box-flex', max(growth, shrink), ignore: ms)\n\n  // new\n  if flex in flex-version\n    vendor('flex', arguments, only: webkit ms official)\n\n\n// converts the justification alignment\n-convert-justify(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else if space-around == align\n    return distribute\n  else if space-between == align\n    return justify\n  else\n    return align\n\n//\n// 8. Alignment\n//    - http://www.w3.org/TR/css3-flexbox/#alignment\n//\njustify-content(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-pack', -convert-justify(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-pack', -convert-justify(align), only: ms)\n    vendor('justify-content', align, only: webkit official)\n\nalign-content(align)\n  // WARN: Obsolete spec does not allow for adjustment here\n  if flex in flex-version\n    vendor('flex-line-pack', -convert-justify(align), only: ms)\n    vendor('align-content', align, only: webkit official)\n\n// converts alignment from 'flex' to normal value\n-convert-alignment(align)\n  if flex-start == align\n    return start\n  else if flex-end == align\n    return end\n  else\n    return align\n\nalign-items(align)\n  // obsolete\n  if box in flex-version\n    vendor('box-align', -convert-alignment(align), ignore: ms official)\n\n  // new\n  if flex in flex-version\n    vendor('flex-align', -convert-alignment(align), only: ms)\n    vendor('align-items', arguments, only: webkit official)\n\nalign-self(align)\n  // WARN: Obsolete spec does not allow for overriding alignment on individual items.\n  if flex in flex-version\n    vendor('align-self', align, only: webkit official)\n    vendor('flex-item-align', -convert-alignment(align), only: ms)\n","base-font-size ?= 16px\nrasterise-media-queries ?= false\n\nrupture = {\n  rasterise-media-queries: rasterise-media-queries\n  mobile-cutoff: 400px\n  desktop-cutoff: 1050px\n  hd-cutoff: 1800px\n  enable-em-breakpoints: false\n  base-font-size: base-font-size\n  anti-overlap: false\n  density-queries: 'dppx' 'webkit' 'moz' 'dpi'\n  retina-density: 1.5\n  use-device-width: false\n}\nrupture.scale = 0 (rupture.mobile-cutoff) 600px 800px (rupture.desktop-cutoff) (rupture.hd-cutoff)\nrupture.scale-names = 'xs' 's' 'm' 'l' 'xl' 'hd'\n\n-is-string(val)\n  if typeof(val) is not 'unit'\n    if val is a 'string' or val is a 'ident'\n      true\n    else\n      false\n  else\n    false\n\n-get-scale-number(scale-name)\n  for list-item, i in rupture.scale-names\n    if list-item is scale-name\n      return i + 1\n  return false\n\n-convert-to(to-unit, value, context = rupture.base-font-size)\n  from-unit = unit(value)\n  return value if to-unit is from-unit\n  if to-unit in ('em' 'rem')\n    return value if from-unit in ('em' 'rem')\n    return unit((value / context), to-unit)\n  if to-unit is 'px'\n    return unit((value * context), 'px')\n\n-on-scale(n)\n  return unit(n) is ''\n\n-larger-than-scale(n)\n  return (n > (length(rupture.scale) - 1)) and -on-scale(n)\n\n-is-zero(n)\n  return n is 0\n\n-overlap-shift(anti-overlap, n)\n  shift-unit = unit(n)\n  anti-overlap = 0px unless anti-overlap\n  anti-overlap = 1px if anti-overlap is true\n  if length(anti-overlap) is 1\n    return -convert-to(shift-unit, anti-overlap)\n  for val in anti-overlap\n    return val if unit(val) is shift-unit\n\n-adjust-overlap(anti-overlap, n, side = 'min')\n  -shift = -overlap-shift(anti-overlap, n)\n  if (side is 'min' and -shift > 0) or (side is 'max' and -shift < 0)\n    n = n + -shift\n  return n\n\n-is-positive(n)\n  return n >= 0\n\n-density-queries(density)\n  if typeof(density) is not 'unit'\n    if not -is-string(density)\n      density = '%s' % density\n  density = rupture.retina-density if density is 'retina'\n  queries = ()\n  for query in rupture.density-queries\n    if query is 'webkit'\n      push(queries, '(-webkit-min-device-pixel-ratio: %s)' % (density))\n    else if query is 'moz'\n      push(queries, '(min--moz-device-pixel-ratio: %s)' % (density))\n    else if query is 'o'\n      push(queries, '(-o-min-device-pixel-ratio: %s/1)' % (density))\n    else if query is 'ratio'\n      push(queries, '(min-device-pixel-ratio: %s)' % (density))\n    else if query is 'dpi'\n      if -is-string(density)\n        density=convert(density)\n      push(queries, '(min-resolution: %sdpi)' % (round(density * 96, 1)))\n    else if query is 'dppx'\n      push(queries, '(min-resolution: %sdppx)' % (density))\n  return queries\n\ncreate-fallback-class(selected, class)\n  /{'' + class + ' ' + selected}\n    {block}\n\n// +between(min, max)\n// usage (scale can be mixed with custom values):\n//   - +between(1, 3) scale:scale\n//   - +between(0, 3) 0 width:scale\n//   - +between(200px, 500px) custom:custom\n//   - +between(0, 300px) 0 width:custom\n//   - +between(1, 300px) scale:custom\n//   - +between(200px, 4) custom:scale\n\nbetween(min, max, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  selected = selector()\n\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  if -is-string(min)\n    min = -get-scale-number(min)\n  if -is-string(max)\n    max = -get-scale-number(max)\n\n  -min = rupture.scale[min - 1] unless -is-zero(min) or (not -on-scale(min))\n  -max = rupture.scale[max] unless not -on-scale(max)\n  -min ?= min\n  -max ?= max\n\n  if (rupture.rasterise-media-queries)\n    if not (density or -max or orientation)\n      {block}\n  else\n    condition = 'only screen'\n    use-device-width = use-device-width ? 'device-' : ''\n    unless -min is 0\n      -min = -convert-to('em', -min) if rupture.enable-em-breakpoints\n      -min = -adjust-overlap(anti-overlap, -min, side: 'min')\n      condition = condition + ' and (min-' + use-device-width + 'width: %s)' % (-min)\n    unless -larger-than-scale(max)\n      -max = -convert-to('em', -max) if rupture.enable-em-breakpoints\n      -max = -adjust-overlap(anti-overlap, -max, side: 'max')\n      condition = condition + ' and (max-' + use-device-width + 'width: %s)' % (-max)\n    if orientation\n      condition = condition + ' and (orientation: %s)' % (orientation)\n    if density\n      conditions = ()\n      for query in -density-queries(density)\n        push(conditions, condition + ' and %s' % (query))\n      condition = join(', ', conditions)\n    @media condition\n      {block}\n  if fallback-class\n    +create-fallback-class(selected, fallback-class)\n      {block}\n\nat(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nfrom-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(scale-point, length(rupture.scale), anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nabove = from-width\n\nto-width(scale-point, anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(1, scale-point, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nbelow = to-width\n\nmobile(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +below(rupture.mobile-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ntablet(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +between(rupture.mobile-cutoff, rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndesktop(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.desktop-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\nhd(anti-overlap = rupture.anti-overlap, density = null, orientation = null, use-device-width = rupture.use-device-width, fallback-class = null)\n  if -is-string(orientation)\n    orientation = convert(orientation)\n  if -is-string(density)\n    density = convert(density)\n  +above(rupture.hd-cutoff, anti-overlap, density, orientation, use-device-width, fallback-class)\n    {block}\n\ndensity(density, orientation = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    conditions = ()\n    for query in -density-queries(density)\n      condition = 'only screen and %s' % (query)\n      if orientation\n        condition = condition + ' and (orientation: %s)' % (orientation)\n      push(conditions, condition)\n    condition = join(', ', conditions)\n    @media condition\n      {block}\n    if fallback-class\n      +create-fallback-class(selected, fallback-class)\n        {block}\n\npixel-ratio = density\n\nretina(orientation = null, fallback-class = null)\n  +density('retina', orientation, fallback-class)\n    {block}\n\nlandscape(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: landscape, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: landscape)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n\nportrait(density = null, fallback-class = null)\n  selected = selector()\n  if not (rupture.rasterise-media-queries)\n    if -is-string(density)\n      density = convert(density)\n    if density\n      +pixel-ratio(density, orientation: portrait, fallback-class)\n        {block}\n    else\n      @media only screen and (orientation: portrait)\n        {block}\n      if fallback-class\n        +create-fallback-class(selected, fallback-class)\n          {block}\n","called-from = ()\n\nvendors = moz webkit o ms official\n\n// stringify the given arg\n\n-string(arg)\n  type(arg) + ' ' + arg\n\n// require a color\n\nrequire-color(color)\n  unless color is a 'color'\n    error('RGB or HSL value expected, got a ' + -string(color))\n\n// require a unit\n\nrequire-unit(n)\n  unless n is a 'unit'\n    error('unit expected, got a ' + -string(n))\n\n// require a string\n\nrequire-string(str)\n  unless str is a 'string' or str is a 'ident'\n    error('string expected, got a ' + -string(str))\n\n// Math functions\n\nabs(n) { math(n, 'abs') }\nmin(a, b) { a < b ? a : b }\nmax(a, b) { a > b ? a : b }\n\n// Trigonometrics\nPI = -math-prop('PI')\n\nradians-to-degrees(angle)\n  angle * (180 / PI)\n\ndegrees-to-radians(angle)\n  unit(angle * (PI / 180),'')\n\nsin(n)\n  n = degrees-to-radians(n) if unit(n) == 'deg'\n  round(math(n, 'sin'), 9)\n\ncos(n)\n  n = degrees-to-radians(n) if unit(n) == 'deg'\n  round(math(n, 'cos'), 9)\n\n// Rounding Math functions\n\nceil(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'ceil') / multiplier\n\nfloor(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'floor') / multiplier\n\nround(n, precision = 0)\n  multiplier = 10 ** precision\n  math(n * multiplier, 'round') / multiplier\n\n// return the sum of the given numbers\n\nsum(nums)\n  sum = 0\n  sum += n for n in nums\n\n// return the average of the given numbers\n\navg(nums)\n  sum(nums) / length(nums)\n\n// return a unitless number, or pass through\n\nremove-unit(n)\n  if typeof(n) is \"unit\"\n    unit(n, \"\")\n  else\n    n\n\n// convert a percent to a decimal, or pass through\n\npercent-to-decimal(n)\n  if unit(n) is \"%\"\n    remove-unit(n) / 100\n  else\n    n\n\n// check if n is an odd number\n\nodd(n)\n  1 == n % 2\n\n// check if n is an even number\n\neven(n)\n  0 == n % 2\n\n// check if color is light\n\nlight(color)\n  lightness(color) >= 50%\n\n// check if color is dark\n\ndark(color)\n  lightness(color) < 50%\n\n// desaturate color by amount\n\ndesaturate(color, amount)\n  adjust(color, 'saturation', - amount)\n\n// saturate color by amount\n\nsaturate(color = '', amount = 100%)\n  if color is a 'color'\n    adjust(color, 'saturation', amount)\n  else\n    unquote( \"saturate(\" + color + \")\" )\n\n// darken by the given amount\n\ndarken(color, amount)\n  adjust(color, 'lightness', - amount)\n\n// lighten by the given amount\n\nlighten(color, amount)\n  adjust(color, 'lightness', amount)\n\n// decrease opacity by amount\n\nfade-out(color, amount)\n  color - rgba(black, percent-to-decimal(amount))\n\n// increase opacity by amount\n\nfade-in(color, amount)\n  color + rgba(black, percent-to-decimal(amount))\n\n// spin hue by a given amount\n\nspin(color, amount)\n  color + unit(amount, deg)\n\n// mix two colors by a given amount\n\nmix(color1, color2, weight = 50%)\n  unless weight in 0..100\n    error(\"Weight must be between 0% and 100%\")\n\n  if length(color1) == 2\n    weight = color1[0]\n    color1 = color1[1]\n\n  else if length(color2) == 2\n    weight = 100 - color2[0]\n    color2 = color2[1]\n\n  require-color(color1)\n  require-color(color2)\n\n  p = unit(weight / 100, '')\n  w = p * 2 - 1\n\n  a = alpha(color1) - alpha(color2)\n\n  w1 = (((w * a == -1) ? w : (w + a) / (1 + w * a)) + 1) / 2\n  w2 = 1 - w1\n\n  channels = (red(color1) red(color2)) (green(color1) green(color2)) (blue(color1) blue(color2))\n  rgb = ()\n\n  for pair in channels\n    push(rgb, floor(pair[0] * w1 + pair[1] * w2))\n\n  a1 = alpha(color1) * p\n  a2 = alpha(color2) * (1 - p)\n  alpha = a1 + a2\n\n  rgba(rgb[0], rgb[1], rgb[2], alpha)\n\n// invert colors, leave alpha intact\n\ninvert(color = '')\n  if color is a 'color'\n    rgba(#fff - color, alpha(color))\n  else\n    unquote( \"invert(\" + color + \")\" )\n\n// give complement of the given color\n\ncomplement( color )\n  spin( color, 180 )\n\n// give grayscale of the given color\n\ngrayscale( color = '' )\n  if color is a 'color'\n    desaturate( color, 100% )\n  else\n    unquote( \"grayscale(\" + color + \")\" )\n\n// mix the given color with white\n\ntint( color, percent )\n  mix( white, color, percent )\n\n// mix the given color with black\n\nshade( color, percent )\n  mix( black, color, percent )\n\n// return the last value in the given expr\n\nlast(expr)\n  expr[length(expr) - 1]\n\n// return keys in the given pairs or object\n\nkeys(pairs)\n  ret = ()\n  if type(pairs) == 'object'\n    for key in pairs\n      push(ret, key)\n  else\n    for pair in pairs\n      push(ret, pair[0]);\n  ret\n\n// return values in the given pairs or object\n\nvalues(pairs)\n  ret = ()\n  if type(pairs) == 'object'\n    for key, val in pairs\n      push(ret, val)\n  else\n    for pair in pairs\n      push(ret, pair[1]);\n  ret\n\n// join values with the given delimiter\n\njoin(delim, vals...)\n  buf = ''\n  vals = vals[0] if length(vals) == 1\n  for val, i in vals\n    buf += i ? delim + val : val\n\n// add a CSS rule to the containing block\n\n// - This definition allows add-property to be used as a mixin\n// - It has the same effect as interpolation but allows users\n//   to opt for a functional style\n\nadd-property-function = add-property\nadd-property(name, expr)\n  if mixin\n    {name} expr\n  else\n    add-property-function(name, expr)\n\nprefix-classes(prefix)\n  -prefix-classes(prefix, block)\n\n// Caching mixin, use inside your functions to enable caching by extending.\n\n$stylus_mixin_cache = {}\ncache()\n  $key = (current-media() or 'no-media') + '__' + called-from[0] + '__' + arguments\n  if $key in $stylus_mixin_cache\n    @extend {\"$cache_placeholder_for_\" + $stylus_mixin_cache[$key]}\n  else if 'cache' in called-from\n    {block}\n  else\n    $id = length($stylus_mixin_cache)\n\n    &,\n    /$cache_placeholder_for_{$id}\n      $stylus_mixin_cache[$key] = $id\n      {block}\n","/*\n * border: <color>\n * border: ...\n */\n\nborder(color, args...)\n  if color is a 'color'\n    border: 1px solid color args\n  else\n    border: arguments\n","// ------\n// Vendor\n// ------\n\n// Utilities specifically intended for helping with vendor-prefixed\n// css properties\n\n// Alias: Transition\n//\n// Transition with an intelligent default.\n//\n// ex. transition()\n// ex. transition: color 1s ease\n// ex. transition(color 1s ease, background 2.4s linear)\n\n//Cache nib transition mixin.\n_transition = transition\n\ntransition()\n  arguments = unquote('all .3s ease') unless arguments\n  _transition: arguments\n\n\n// Alias: Box Shadow\n//\n// Box shadow with pie support, if you are using it.\n//\n// ex. box-shadow: 1px 1px 3px blue\n// ex. box-shadow(1px 1px 3px blue, inset 2px 0 5px rgba(0,0,0,.5))\n\nbox-shadow()\n  box-shadow: arguments\n  pie()\n\n// Alias: Border Radius\n//\n// Border-radius with pie support, if you are using it.\n//\n// ex. +round-corners(5px)\n\nborder-radius()\n  border-radius: arguments\n  pie()\n\n// Alias: Opacity\n//\n// I know, it seems silly. But every time you go to old IE testing you will be\n// thanking yourself for using this instead of the normal opacity declaration.\n// Overrides default opacity.\n//\n// ex. opacity: .6\n\nopacity(opacity, args...)\n  \n  if args  \n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100 args) if support-for-ie  \n  else\n    filter: s(\"progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)\", opacity * 100) if support-for-ie  \n    \n  opacity: opacity args\n\n// Alias: Border Box\n// A quicker way to specify border-box sizing.\n\nborder-box()\n  box-sizing: border-box\n\n// Alises: background-appearance-x and y\n//\n// In case you want to use an unsupported background-position property, this\n// should set you straight!\n\nbackground-position-x(x)\n  background-position: x 0\n\nbackground-position-y(y)\n  background-position: 0 y\n\n// Mixin: Opentype ligatures\n//\n// The vast majority of fonts contain lowercase and uppercase alphabets,\n// numerals, punctuation and accents. // Many professionally-designed fonts\n// also contain ligatures, alternative characters, smallcaps, different kinds of\n// numbers, and sometimes much more besides. This enables it.\n//\n// Source: http://www.newnet-soft.com/blog/csstypography\n// Additional: http://blog.fontdeck.com/post/15777165734/opentype-1\n\nopenTypeLigatures()\n  -moz-font-feature-settings:    \"liga=1, dlig=1\"\n  -ms-font-feature-settings:     \"liga\", \"dlig\"\n  -webkit-font-feature-settings: \"liga\", \"dlig\"\n  -o-font-feature-settings:      \"liga\", \"dlig\"\n  font-feature-settings:         \"liga\", \"dlig\"\n","/*\n * Overflow utility. Maps to regular overflow, and adds an ellipsis value.\n *\n * Synopsis:\n *\n *   overflow: <type>\n *\n * Examples:\n *\n *     overflow: auto\n *     overflow: hidden\n *     overflow: ellipsis\n *\n */\n\noverflow()\n  if arguments[0] == ellipsis\n    ellipsis()\n  else\n    overflow: arguments\n"],"sourceRoot":"/source/"}